//Method - 1
class Solution {
    public int countSubstrings(String s) {
        int count = 0;
        for (int i = 0; i < s.length(); i++) {
            for (int j = i + 1; j <= s.length(); j++) {
                if (isPalindrome(s.substring(i,j))){
                    count++;
                }
            }
        }
        return count;
    }
    public static boolean isPalindrome(String str){
        int start = 0;
        int end = str.length() - 1;
        while (start < end) {
            if (str.charAt(start) != str.charAt(end)) {
                return false;
            }
            start++;
            end--;
        }
        return true;
    }
}

//Method - 2
class Solution {
    public int countSubstrings(String s) {
        int totalCount = 0;
        for (int i = 0; i < s.length(); i++) {
            totalCount += countPalindromes(s, i, i);
            totalCount += countPalindromes(s, i, i + 1);
        }
        return totalCount;
    }
    private int countPalindromes(String str, int start, int end) {
        int count = 0;
        while (start >= 0 && end < str.length() && str.charAt(start) == str.charAt(end)) {
            count++;
            start--;
            end++;
        }
        return count;
    }
}
