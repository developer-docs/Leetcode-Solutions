//Method - 1
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int leftProduct[] = new int[nums.length];
        int rightProduct[] = new int[nums.length];
        for (int i = 0, temp = 1; i < nums.length; i++) {
            leftProduct[i] = temp;
            temp *= nums[i];
        }
        for (int i = nums.length - 1, temp = 1; i >= 0; i--) {
            rightProduct[i] = temp;
            temp *= nums[i];
        }
        int result[] = new int[nums.length];
        for (int i = 0; i < nums.length; i++) {
            result[i] = leftProduct[i] * rightProduct[i];
        }
        return result;
    }
}

//Method - 2
class Solution {
    public int[] productExceptSelf(int[] nums) {
    int[] result = new int[nums.length];
    for (int i = 0, temp = 1; i < nums.length; i++) {
        result[i] = temp;
        temp *= nums[i];
    }
    for (int i = nums.length - 1, temp = 1; i >= 0; i--) {
        result[i] *= temp;
        temp *= nums[i];
    }
    return result;
    }
}
